generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Glass {
  id             String           @id @default(cuid())
  name           String
  volume         Float?
  image          String?
  deposit        Float
  CocktailRecipe CocktailRecipe[]
}

model Decoration {
  id             String           @id @default(cuid())
  name           String
  price          Float?
  CocktailRecipe CocktailRecipe[]
}

model CocktailRecipe {
  id                    String                  @id @default(cuid())
  name                  String
  description           String?
  tags                  String[]
  image                 String?
  price                 Float?
  glassWithIce          String
  glassId               String?
  glass                 Glass?                  @relation(fields: [glassId], references: [id])
  decorationId          String?
  decoration            Decoration?             @relation(fields: [decorationId], references: [id])
  steps                 CocktailRecipeStep[]
  CocktailCardGroupItem CocktailCardGroupItem[]
}

model CocktailRecipeStep {
  id         String @id @default(cuid())
  stepNumber Int

  mixing Boolean

  tool String

  ingredients CocktailRecipeIngredient[]

  cocktailRecipe   CocktailRecipe @relation(fields: [cocktailRecipeId], references: [id])
  cocktailRecipeId String
}

model CocktailRecipeIngredient {
  id               String      @id @default(cuid())
  ingredientNumber Int
  amount           Float?
  unit             String?
  ingredientId     String?
  ingredient       Ingredient? @relation(fields: [ingredientId], references: [id])

  cocktailRecipeStep   CocktailRecipeStep @relation(fields: [cocktailRecipeStepId], references: [id])
  cocktailRecipeStepId String
}

model Ingredient {
  id                       String                     @id @default(cuid())
  name                     String
  shortName                String?
  price                    Float?
  volume                   Float?
  unit                     String?
  link                     String?
  CocktailRecipeIngredient CocktailRecipeIngredient[]
}

model CocktailCard {
  id     String              @id @default(cuid())
  name   String
  date   DateTime            @default(now())
  groups CocktailCardGroup[]
}

model CocktailCardGroup {
  id             String                  @id @default(cuid())
  groupNumber    Int                     @default(autoincrement())
  name           String
  cocktailCardId String
  groupPrice     Float?
  cocktailCard   CocktailCard            @relation(fields: [cocktailCardId], references: [id])
  items          CocktailCardGroupItem[]
}

model CocktailCardGroupItem {
  itemNumber          Int               @default(autoincrement())
  cocktailCardGroupId String
  cocktailCardGroup   CocktailCardGroup @relation(fields: [cocktailCardGroupId], references: [id])
  cocktailId          String
  cocktail            CocktailRecipe    @relation(fields: [cocktailId], references: [id])
  specialPrice        Float?

  @@id([cocktailCardGroupId, cocktailId])
}
