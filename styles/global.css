@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  /* ===============================================
   * Scroll‑Gradient Utilities (Tailwind v3)
   * -----------------------------------------------
   * 1) .scroll-gradient-white   – weisser Hintergrund
   * 2) .scroll-gradient-base    – DaisyUI bg-base-300 Hintergrund
   *
   *  Beide Klassen erzeugen automatisch die Scroll‑Shadows oben & unten,
   *  OHNE zusätzliche JS‑Logik. Einfach dem Scroll‑Container hinzufügen:
   *
   *  <div class="h-64 overflow-y-auto scroll-gradient-white">
   *    …Content…
   *  </div>
   * ===============================================*/
  /* ---- 1) Weiss ---- */
  .scroll-gradient-white {
    /* Basisfarbe */
    --sg-bg: theme("colors.white");
    --sg-fg: rgb(70, 70, 70, 0.5); /* Fallback für DaisyUI */
  }

  /* ---- 2) DaisyUI base-300 ---- */
  .scroll-gradient-base {
    /* DaisyUI setzt die Color‑Variable automatisch; fallback nutzen */
    @apply bg-base-300;
    --sg-bg: theme("colors.base-300");
    --sg-fg: theme("colors.base-content");
  }

  /* ---- Gemeinsamer Gradient‑Code ---- */
  .scroll-gradient-white,
  .scroll-gradient-base {
    background: /* fade‑in oben */ linear-gradient(var(--sg-bg) 33%, rgba(255, 255, 255, 0)),
      /* fade‑in unten */ linear-gradient(rgba(255, 255, 255, 0), var(--sg-bg) 66%) 0 100%,
      /* Schlagschatten oben */ radial-gradient(farthest-side at 50% 0, var(--sg-fg), rgba(0, 0, 0, 0)),
      /* Schlagschatten unten */ radial-gradient(farthest-side at 50% 100%, var(--sg-fg), rgba(0, 0, 0, 0)) 0 100%;
    background-color: var(--sg-bg);
    background-repeat: no-repeat;
    background-attachment: local, local, scroll, scroll;
    background-size: 100% 70px, 100% 70px, 100% 12px, 100% 12px;
  }
}

.rti--tag {
  @apply badge badge-outline space-x-2 p-4 !important;
}

.rti--container {
  @apply textarea textarea-bordered !important;
}

.rti--input {
  @apply input input-bordered !important;
}

.card-body {
  @apply p-3 !important;
}

.card {
  @apply bg-base-300 shadow-lg !important;
}

.collapse-content {
  @apply p-0 !important;
}

.table > thead {
  /*@apply bg-base-100;*/
}

.divider-sm {
  @apply divider mb-0.5 mt-0.5 !important;
}

.btn-red {
  @apply border-red-800 bg-red-700 text-white hover:bg-red-800;
}

.btn-green {
  @apply border-green-800 bg-green-700 text-white hover:bg-green-800;
}

.long-text-format {
  @apply whitespace-pre-line text-pretty break-normal text-justify;
}

/*
Remove arrows from input field
https://stackoverflow.com/a/74043438/12160393
*/
@layer base {
  input[type='number']::-webkit-outer-spin-button,
  input[type='number']::-webkit-inner-spin-button,
  input[type='number'] {
    -webkit-appearance: none;
    margin: 0;
    -moz-appearance: textfield !important;
  }
}

@media print {
  .card {
    @apply border shadow-none !important;
  }

  .table {
    @apply border !important;
  }

  thead > tr {
    @apply border bg-base-200 !important;
    print-color-adjust: exact;
  }

  @layer base {
    input[type='number']::-webkit-inner-spin-button,
    input[type='number']::-webkit-outer-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }
}

thead {
  @apply bg-base-100;
}

.modal {
  @apply z-40;
}

.modal-box {
  max-width: unset !important;
}
:root {
  --button-height: 64px; /* h-12 */
  --button-margin: 32px; /* my-4 */
  --max-height: calc(100vh - 3 * (var(--button-height) + var(--button-margin)));
}

.max-h-custom {
  max-height: var(--max-height);
}

.bg-transparent-pattern {
  background-color: #fff;
  background-image: linear-gradient(45deg, #ccc 25%, transparent 25%), linear-gradient(-45deg, #ccc 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, #ccc 75%), linear-gradient(-45deg, transparent 75%, #ccc 75%);
  background-size: 20px 20px;
  background-position:
    0 0,
    0 10px,
    10px -10px,
    -10px 0px;
}
